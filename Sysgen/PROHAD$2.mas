#srcfile 'C:\MOSAICAPP\MC4GOTTSTEIN\PROHAD\Sysgen\PROHAD.mlh'

#defpou R_TRIG
  bool CLK,
  bool Q,
  bool M


#defpou F_TRIG
  bool CLK,
  bool Q,
  bool M


#defpou SR
  bool S1,
  bool R,
  bool Q1


#defpou RS
  bool S,
  bool R1,
  bool Q1


#defpou CTU
  bool CU,  ;vstup pro èítání nahoru
  bool R,  ;reset èítaèe
  int PV,  ;pøedvolba èítaèe
  bool Q,  ;výstup èítaèe
  int CV,  ;hodnota èítaèe
  bool __EDGE_R__CU


#defpou CTD
  bool CD,  ;vstup pro èítání dolù
  bool LD,  ;vstup pro nastavení pøedvolby
  int PV,  ;pøedvolba èítaèe
  bool Q,  ;výstup èítaèe
  int CV,  ;hodnota èítaèe
  bool __EDGE_R__CD


#defpou CTUD
  bool CU,  ;vstup pro èítání nahoru
  bool CD,  ;vstup pro èítání dolù
  bool R,  ;reset èítaèe
  bool LD,  ;vstup pro nastavení pøedvolby
  int PV,  ;pøedvolba èítaèe
  bool QU,  ;výstup èítaèe nahoru
  bool QD,  ;výstup èítaèe dolù
  int CV,  ;hodnota èítaèe
  bool __EDGE_R__CU,
  bool __EDGE_R__CD


#defpou TON
  bool IN,  ;vstup èasovaèe
  time PT,  ;pøedvolba èasovaèe
  bool Q,  ;výstup èasovaèe
  time ET,  ;aktuální hodnota èasovaèe
  R_TRIG IN_r_edge,
  time LT  ;last tick value ( 1ms resolution)


#defpou TOF
  bool IN,  ;vstup èasovaèe
  time PT,  ;pøedvolba èasovaèe
  bool Q,  ;výstup èasovaèe
  time ET,  ;aktuální hodnota èasovaèe
  F_TRIG IN_f_edge,
  time LT  ;last tick value ( 1ms resolution)


#defpou TP
  bool IN,  ;vstup èasovaèe
  time PT,  ;pøedvolba èasovaèe
  bool Q,  ;výstup èasovaèe
  time ET,  ;aktuální hodnota èasovaèe
  R_TRIG IN_r_edge,
  time LT  ;last tick value ( 1ms resolution)


#defpou __LATENT_INSTANCE IS_INVALID_REAL
  bool __fc__IS_INVALID_REAL,
  real num


#defpou __LATENT_INSTANCE ADD_TIME
  time __fc__ADD_TIME,
  time IN1,
  time IN2


#defpou __LATENT_INSTANCE SUB_TIME
  time __fc__SUB_TIME,
  time IN1,
  time IN2


#defpou __LATENT_INSTANCE ADD_TOD_TIME
  time_of_day __fc__ADD_TOD_TIME,
  time_of_day IN1,
  time IN2


#defpou __LATENT_INSTANCE ADD_DT_TIME
  date_and_time __fc__ADD_DT_TIME,
  date_and_time IN1,
  time IN2


#defpou __LATENT_INSTANCE SUB_DATE_DATE
  time __fc__SUB_DATE_DATE,
  date IN1,
  date IN2


#defpou __LATENT_INSTANCE SUB_TOD_TIME
  time_of_day __fc__SUB_TOD_TIME,
  time_of_day IN1,
  time IN2


#defpou __LATENT_INSTANCE SUB_TOD_TOD
  time __fc__SUB_TOD_TOD,
  time_of_day IN1,
  time_of_day IN2


#defpou __LATENT_INSTANCE SUB_DT_TIME
  date_and_time __fc__SUB_DT_TIME,
  date_and_time IN1,
  time IN2


#defpou __LATENT_INSTANCE SUB_DT_DT
  time __fc__SUB_DT_DT,
  date_and_time IN1,
  date_and_time IN2


#defpou __LATENT_INSTANCE CONCAT_DATE_TOD
  date_and_time __fc__CONCAT_DATE_TOD,
  date IN1,
  time_of_day IN2


; Global types
#struct  T_RGB_COLOR
  usint red,  ;red color <0..255>
  usint green,  ;green color <0..255>
  usint blue,  ;blue color <0..255>
  usint opacity  ;opacity (0 = opaque, 255 = transparent)

; Global types
#struct  TSYSTEM_S
  byte S0,  ;%S0 pøíznaky výsledkù aritmetických operací
  byte S1,  ;%S1 pøíznaky výsledkù logických operací
  bool S2_0,  ;%S2.0 rezervováno
  bool S2_1,  ;%S2.1 rezervováno
  bool S2_2,  ;%S2.2 PLC je v režimu RUN
  bool S2_3,  ;%S2.3 teplý restart PLC
  bool S2_4,  ;%S2.4 studený restart PLC
  bool OUTPUTS_ARE_ENABLED,  ;%S2.5 výstupy odblokovány
  bool S2_6,  ;%S2.6 pøechod do run bez restartu PLC
  bool CYCLE_TIME_WARNING,  ;%S2.7 pøekroèena první mez doby cyklu (varování)
  usint LAST_CYCLE_TIME_10MS,  ;%S3 doba minulého cyklu v 10 ms
  usint CYCLE_COUNTER,  ;%S4 èítaè cyklu
  usint COUNTER_10MS,  ;%S5 èítaè desítek milisekund
  usint COUNTER_SECONDS,  ;%S6 èítaè sekund systémového èasu
  usint COUNTER_MINUTES,  ;%S7 èítaè minut systémového èasu
  usint COUNTER_HOURS,  ;%S8 èítaè hodin systémového èasu
  usint COUNTER_DAYS_OF_WEEK,  ;%S9 èítaè dnù v týdnu
  usint COUNTER_DAYS_OF_MONTH,  ;%S10 èítaè dnù v mìsíci
  usint COUNTER_MONTHS,  ;%S11 Èítaè mesícù
  usint COUNTER_YEARS,  ;%S12 Èítaè rokù
  bool PERIOD_PULSE_100MS,  ;%S13.0 pulz s periodou 100 ms
  bool PERIOD_PULSE_500MS,  ;%S13.1 pulz s periodou 500 ms
  bool PERIOD_PULSE_1SEC,  ;%S13.2 pulz s periodou 1 s
  bool PERIOD_PULSE_10SEC,  ;%S13.3 pulz s periodou 10 s
  bool PERIOD_PULSE_1MIN,  ;%S13.4 pulz s periodou 1 min
  bool PERIOD_PULSE_10MIN,  ;%S13.5 pulz s periodou 10 min
  bool PERIOD_PULSE_1HOUR,  ;%S13.6 pulz s periodou 1 hod
  bool PERIOD_PULSE_1DAY,  ;%S13.7 pulz s periodou 1 den
  uint COUNTER_100MS,  ;%SW14 Èítaè v 100m
  uint COUNTER_1SEC,  ;%SW16 Èítaè v 1s
  uint COUNTER_10SEC,  ;%SW18 Èítaè v 10s
  bool R_EDGE_100MS,  ;%S21.0 nábìžná hrana 1x za 100 ms
  bool R_EDGE_500MS,  ;%S21.1 nábìžná hrana 1x za 500 ms
  bool R_EDGE_1SEC,  ;%S21.2 nábìžná hrana 1x za 1 s
  bool R_EDGE_10SEC,  ;%S21.3 nábìžná hrana 1x za 10 s
  bool R_EDGE_1MIN,  ;%S21.4 nábìžná hrana 1x za 1 min
  bool R_EDGE_10MIN,  ;%S21.5 nábìžná hrana 1x za 10 min
  bool R_EDGE_1HOUR,  ;%S21.6 nábìžná hrana 1x za 1 hod
  bool R_EDGE_1DAY,  ;%S21.7 nábìžná hrana 1x za 1 den
  bool F_EDGE_100MS,  ;%S21.0 sestupná hrana 1x za 100 ms
  bool F_EDGE_500MS,  ;%S21.1 sestupná hrana 1x za 500 ms
  bool F_EDGE_1SEC,  ;%S21.2 sestupná hrana 1x za 1 s
  bool F_EDGE_10SEC,  ;%S21.3 sestupná hrana 1x za 10 s
  bool F_EDGE_1MIN,  ;%S21.4 sestupná hrana 1x za 1 min
  bool F_EDGE_10MIN,  ;%S21.5 sestupná hrana 1x za 10 min
  bool F_EDGE_1HOUR,  ;%S21.6 sestupná hrana 1x za 1 hod
  bool F_EDGE_1DAY,  ;%S21.7 sestupná hrana 1x za 1 den
  uint LAST_CYCLE_TIME_100US,  ;%SW22 doba minulého cyklu v 100 µs
  byte S24,  ;%S24 øídící masky procesù
  byte S25,  ;%S25 øídící masky procesù
  byte S26,  ;%S26 øídící masky procesù
  byte S27,  ;%S27 øídící masky procesù
  byte S28,  ;%S28 øídící masky procesù
  byte S29,  ;%S29 øídící masky procesù
  udint SL30,  ;%SL30 rezervováno
  byte S34,  ;%S34 hlavní kód chyby PLC
  bool BAT_ERR,  ;%S35.0 chyba zálohovací baterie
  bool S35_1,  ;%S35.1 rezervováno
  bool S35_2,  ;%S35.2 stav tlaèítka MODE
  bool S35_3,  ;%S35.3 stav tlaèítka SET
  bool S35_4,  ;%S35.4 rezervováno
  bool S35_5,  ;%S35.5 rezervováno
  bool IS_SUMMER_TIME,  ;%S35.6 indikace letního èasu
  bool SUMMER_TIME_REQUEST,  ;%S35.7 žádost o automatický pøechod na letni cas (pouze Foxtrot 1)
  usint CPU_TEMPERATURE,  ;%S36  teplota procesorového modulu [stupnì C]
  bool MOSAIC_IS_CONNECTED,  ;%S37.0 Mosaic komunikuje s PLC
  bool S37_1,  ;%S37.1 rezervováno
  bool S37_2,  ;%S37.2 rezervováno
  bool IO_IS_FIXED,  ;%S37.3 pøíznak fixace I/O
  bool S37_4,  ;%S37.4 rezervováno
  bool USB_DISK_READY,  ;%S37.5 USB Flash Disk je pøipraven k použití (pouze pro Foxtrot 2 nebo TC800)
  bool IS_USB_DISK,  ;%S37.6 USB Flash Disk je zasunut do konektoru USB1 (pouze pro Foxtrot 2 nebo TC800)
  bool EEPROM_IS_ON,  ;%S37.7 
  byte S38,  ;%S38 verze uživatelského programu PLC
  byte S39,  ;%S39 verze uživatelského programu PLC
  byte S40,  ;%S40 verze systémového programu centrální jednotky
  byte S41,  ;%S41 verze systémového programu centrální jednotky
  byte S42,  ;%S42 øada PLC  (C=16#43, G=16#47, K=16#4B, L=16#4C, I=16#49)
  byte S43,  ;%S43 pøíznaky chování PLC
  byte S44,  ;%S44 znaèka pøekladaèe
  byte S45,  ;%S45 znaèka pøekladaèe
  byte S46,  ;%S46 mez pro varování doby cyklu  [10ms]
  byte S47,  ;%S47 mez pro maximální dobu cyklu  [10ms]
  word SW48,  ;%SW48 specifikace chyby PLC
  byte S50,  ;%S50 kód chyby PLC
  byte S51,  ;%S51 hlavní kód chyby PLC
  udint COUNTER_1MS,  ;%SL52 Èítaè po 1 ms
  word SW56,  ;%SW56 rezerva
  byte CPU_DI,  ;%S58 vstupy obsluhované centrální jednotkou
  byte CPU_DO,  ;%S59 výstupy obsluhované centrální jednotkou
  udint SL60,  ;%SL70 rezerva
  udint SIZE_OF_RETAIN_ZONE,  ;%SL64 velikost remanentní zóny (poèet bytù)
  int UTC_OFFSET,  ;%SW68 offset proti UTC
  word CRC_OF_USER_PROGRAM,  ;%SW70 CRC uživatelského programu
  word CRC_OF_HEADER_PROGRAM,  ;%SW72 CRC hlavièky uživatelského programu
  byte S74,  ;%S74 rezervováno
  byte S75,  ;%S75 rezervováno
  byte S76,  ;%S76 rezervováno
  byte S77,  ;%S77 rezervováno
  uint COUNTER_MILLISECONDS,  ;%SW78 desetinná èást systémového èasu [ms]
  byte[20] PLC_PRIVATE_AREA  ;%S80,...,%S99 privátní zóna centrální jednotky PLC

; Global variables
#def  System_S TSYSTEM_S %S0
#def  IS_HOT_RESTART_PLC bool __absolute(System_S~S2_3)  ;%S2.3 teplý restart PLC
#def  IS_COLD_RESTART_PLC bool __absolute(System_S~S2_4)  ;%S2.4 studený restart PLC
#def  IS_RESTART_PLC bool __absolute(System_S~S2_6)  ;%S2.6 prechod do run bez restartu PLC
#def  CRC_OF_APLIC_PROGRAM dword __absolute(System_S~CRC_OF_USER_PROGRAM)  ;%SL70 CRC aplikaèního programu
#def  DISABLE_WEB_DEL_BUTTONS bool %S355.0  ;%S355.0 potlaèit tlaèítka DEL v seznamu souborù
#def  USE_USER_LOGIN_PAGE bool %S355.1  ;%S355.1 pro pøihlášení použít uživatelkou web stránku místo systémové
#def  ENABLE_WEB_CORS bool %S355.2  ;%S355.2 povolit CORS pro web server
#def  ENABLE_API_CORS bool %S355.3  ;%S355.3 povolit CORS pro TecoApi

; Global types
#struct  TModuleInfo
  bool ECOM,  ;1 = chyba komunikace mezi CPU a I/O modulem
  bool DATA,  ;1 = data poskytovaná modulem jsou platná
  bool DUMMY1,  ;nepouzito
  bool DUMMY2,  ;nepouzito
  bool ERR,  ;1 = chyba I/O modulu
  bool DEC,  ;1 = modul má platnou deklaraci v programu PLC
  bool OTH,  ;1 = typ I/O modulu neodpovídá deklaraci v programu PLC
  bool POS,  ;1 = modul je pøítomen v dané pozici
  usint STAT  ;status modulu – výše uvedené promìnné jako 1 byte (ECOM = STAT.0, … , POS = STAT.7)

; Global types
#struct  TIOSystemInfo
  bool err,  ;0 = I/O systém PLC je bez chyby, 1 = v I/O systému PLC je nìjaký problém
  usint rackNumber,  ;pøi err = 1 udává èíslo rámu PLC, kde je umístìn modul signalizující nìjaký problém
  usint position  ;pøi err = 1 udává èíslo pozice v rámu PLC, kde je umístìn modul signalizující nìjaký problém

; Global variables
#def  MODULE_AND_DATA_OK 162
#def  __Init____MODULE_AND_DATA_OK MODULE_AND_DATA_OK

#defpou __LATENT_INSTANCE ModuleInfo
  TModuleInfo __fc__ModuleInfo,
  usint rackNumber,  ;èíslo rámu, kde je umístìn I/O modul
  usint position  ;èíslo pozice v rámu, kde je umístìn I/O modul


#defpou __LATENT_INSTANCE ModuleInfo2
  TModuleInfo __fc__ModuleInfo2,
  udint Bus_ID,  ;identifikátor sbìrnice (TCL2 = 16#1020, ...)
  usint Unit_ID  ;adresa jednotky na sbernici (0,...,63)


#defpou __LATENT_INSTANCE IOSystemInfo
  TIOSystemInfo __fc__IOSystemInfo


#defpou __LATENT_INSTANCE Memcpy
  uint __fc__Memcpy,
  uint length,  ;Délka kopírovaného bloku v bytech
  pointer source,  ;Zdroj odkud kopírovat
  pointer dest  ;Cíl kam kopírovat


#defpou __LATENT_INSTANCE MemcpyEx
  uint __fc__MemcpyEx,
  udint length,  ;Délka kopírovaného bloku v bytech
  udint offSource,  ;Posunutí od zaèátku zdroje
  udint offDest,  ;Posunutí od zaèátku cíle
  pointer source,  ;Zdroj odkud kopírovat
  pointer dest  ;Cíl kam kopírovat


#defpou __LATENT_INSTANCE MemcpyPtr
  udint __fc__MemcpyPtr,
  pointer source,  ;pointer to source
  pointer dest,  ;pointer to  destination
  udint length  ;number of bytes


#defpou __LATENT_INSTANCE MemcpyPtr0
  udint __fc__MemcpyPtr0,
  pointer source,  ;pointer to source
  pointer dest,  ;pointer to  destination
  udint length  ;number of bytes


#defpou __LATENT_INSTANCE Memset
  bool __fc__Memset,
  udint val,  ;Hodnota, která se zapíše do bloku pamìti
  uint length,  ;Délka bloku pamìti v bytech
  pointer dest  ;Cíl, který bude naplnìn konstantou


#defpou __LATENT_INSTANCE MemsetEx
  bool __fc__MemsetEx,
  udint val,  ;Hodnota, která se zapíše do bloku pamìti
  udint length,  ;Délka bloku pamìti v bytech
  udint offDest,  ;Posunutí od zaèátku cíle
  pointer dest  ;Cíl, který bude naplnìn konstantou


#defpou __LATENT_INSTANCE Memcmp
  bool __fc__Memcmp,
  uint length,  ;Délka porovnávaného bloku v bytech
  pointer in1,  ;První porovnávaný blok
  pointer in2  ;Druhý porovnávaný blok


#defpou __LATENT_INSTANCE MemcmpEx
  bool __fc__MemcmpEx,
  udint length,  ;Délka porovnávaného bloku v bytech
  udint offIn1,  ;Posunutí prvního porovnávaného bloku
  udint offIn2,  ;Posunutí druhého porovnávaného bloku
  pointer in1,  ;První porovnávaný blok
  pointer in2  ;Druhý porovnávaný blok


#defpou __LATENT_INSTANCE IncreaseMaxCycleTime
  bool __fc__IncreaseMaxCycleTime,
  uint addTime  ;o kolik milisekund se má zvýšit hlídaná doba cyklu


; Global types
#struct  TTecoDateTime
  usint year,  ;rok     (poslední dvì èíslice letopoètu)
  usint month,  ;mìsíc   (1 .. 12)
  usint day,  ;den     (1 .. 28/29/30/31)
  usint hour,  ;hodina  (0 .. 23)
  usint min,  ;minuta  (0 .. 59)
  usint sec,  ;sekunda (0 .. 59)
  usint dayOfWeek,  ;den v týdnu (1 = pondìlí, 7 = nedìle)
  uint milisec  ;milisekunda

#defpou __LATENT_INSTANCE SetSummerTime
  bool __fc__SetSummerTime


#defpou __LATENT_INSTANCE IsSummerTime
  bool __fc__IsSummerTime


#defpou __LATENT_INSTANCE SetWinterTime
  bool __fc__SetWinterTime


#defpou __LATENT_INSTANCE IsWinterTime
  bool __fc__IsWinterTime


#defpou __LATENT_INSTANCE GetDate
  date __fc__GetDate,
  TTecoDateTime tmp


#defpou __LATENT_INSTANCE GetTime
  time __fc__GetTime,
  uint milisec


#defpou __LATENT_INSTANCE GetDateTime
  date_and_time __fc__GetDateTime,
  TTecoDateTime tmp


#defpou __LATENT_INSTANCE GetRTC
  date_and_time __fc__GetRTC,
  TTecoDateTime tmp


#defpou __LATENT_INSTANCE SetRTC
  bool __fc__SetRTC,
  date_and_time PDT,  ;nový datum a èas
  TTecoDateTime tmp


#defpou __LATENT_INSTANCE TecoDT_TO_DT
  date_and_time __fc__TecoDT_TO_DT,
  TTecoDateTime Teco_DT  ;datum a èas


#defpou __LATENT_INSTANCE DT_TO_TecoDT
  TTecoDateTime __fc__DT_TO_TecoDT,
  date_and_time IEC_DT  ;datum a èas


#defpou __LATENT_INSTANCE memory_for_ProgramIsChanged
  bool __fc__memory_for_ProgramIsChanged,
  bool saveSL70,
  udint memSL70,
  usint memS4


#defpou __LATENT_INSTANCE ProgramIsChanged
  bool __fc__ProgramIsChanged,
  bool saveSL70,
  udint memSL70,
  usint memS4


#defpou __LATENT_INSTANCE ReInitPLC_hotRestart
  bool __fc__ReInitPLC_hotRestart,
  bool rq  ;1 = provést reinicializaci PLC


#defpou __LATENT_INSTANCE ReInitPLC_coldRestart
  bool __fc__ReInitPLC_coldRestart,
  bool rq  ;1 = provést reinicializaci PLC


#defpou __LATENT_INSTANCE ReInitPLC_noRestart
  bool __fc__ReInitPLC_noRestart,
  bool rq  ;1 = provést reinicializaci PLC


#defpou __LATENT_INSTANCE ReInitPLC_hotRestartX
  bool __fc__ReInitPLC_hotRestartX,
  bool rq,  ;1 = provést reinicializaci PLC
  bool eeprom,  ;1 = naprogramovat nový kód do EEPROM
  string[81] code,  ;jméno souboru s kódem programu (vèetnì cesty)
  string[81] table  ;jméno souboru s tabulkami programu (vèetnì cesty)


#defpou __LATENT_INSTANCE ReInitPLC_coldRestartX
  bool __fc__ReInitPLC_coldRestartX,
  bool rq,  ;1 = provést reinicializaci PLC
  bool eeprom,  ;1 = naprogramovat nový kód do EEPROM
  string[81] code,  ;jméno souboru s kódem programu (vèetnì cesty)
  string[81] table  ;jméno souboru s tabulkami programu (vèetnì cesty)


#defpou __LATENT_INSTANCE ReInitPLC_noRestartX
  bool __fc__ReInitPLC_noRestartX,
  bool rq,  ;1 = provést reinicializaci PLC
  bool eeprom,  ;1 = naprogramovat nový kód do EEPROM
  string[81] code,  ;jméno souboru s kódem programu (vèetnì cesty)
  string[81] table  ;jméno souboru s tabulkami programu (vèetnì cesty)


#defpou __LATENT_INSTANCE TestHotRestartFailed2
  bool __fc__TestHotRestartFailed2


#defpou __LATENT_INSTANCE GetModuleID
  string[41] __fc__GetModuleID,
  usint rackNumber,  ;císlo rámu, kde je umísten I/O modul
  usint position  ;císlo pozice v rámu, kde je umísten I/O modul


#defpou __LATENT_INSTANCE GetVarValueByName
  string[256] __fc__GetVarValueByName,
  string[256] varName  ;úplné jméno promìnné (jméno instance)


#defpou __LATENT_INSTANCE GetVarNameByAdr
  string[256] __fc__GetVarNameByAdr,
  pointer varAdr,  ;jméno promìnné (jméno instance)
  udint varSize  ;velikost promìnné (poèet bytù)


; Global types
#struct  T_VAR_DESC
  udint addr,
  udint size,
  usint typ,
  bool isArray

#defpou __LATENT_INSTANCE GetVarDescByName
  T_VAR_DESC __fc__GetVarDescByName,
  string[256] varName  ;úplné jméno promìnné (jméno instance)


#defpou __LATENT_INSTANCE SetVarValueByName
  bool __fc__SetVarValueByName,
  string[256] varName,  ;úplné jméno promìnné (jméno instance)
  string[256] varValue  ;nová hodnota promìnné


; Global types
#struct  TProgramInfo2
  string[33] progName,  ;user program name
  string[17] progVersion,  ;version of program
  string[33] compiled,  ;date of compilation
  dword stamp  ;CRC stamp

#defpou __LATENT_INSTANCE GetProgramInfo2
  TProgramInfo2 __fc__GetProgramInfo2


; Global types
#struct  TPlcInfo2
  string[5] family,  ;family of PLC
  string[17] plcType,  ;PLC type
  string[13] specif,  ;specification
  string[13] version,  ;PLC version
  string[9] serialNum  ;PLC serial number

#defpou __LATENT_INSTANCE GetPlcInfo2
  TPlcInfo2 __fc__GetPlcInfo2


#defpou __LATENT_INSTANCE ResetLTE2
  bool __fc__ResetLTE2


#defpou __LATENT_INSTANCE LoadNewPackage2
  bool __fc__LoadNewPackage2,
  bool rq,  ;1 = provést reinicializaci PLC
  string[81] pckg  ;název balíèku s novým programem pro PLC


; Global types
#struct  T_VAR_ABS_LOC
  usint zone,  ;zone: 0=%X, 1=%Y, 2=%S, 3=%R
  udint offset,  ;offset inside zone
  string[16] inf  ;string info (for example '%R356')

#defpou __LATENT_INSTANCE GetVarAbsLoc
  T_VAR_ABS_LOC __fc__GetVarAbsLoc,
  pointer adrVar  ;pointer to variable


#defpou __LATENT_INSTANCE GetVarAbsLocBool
  T_VAR_ABS_LOC __fc__GetVarAbsLocBool,
  pointer adrVar  ;pointer to BOOL variable


#defpou __LATENT_INSTANCE RandomU
  real __fc__RandomU,
  bool init,  ;Inicializovat seed podle data a èasu
  pointer seed  ;Hodnota urèující polohu v psedonáhodné øadì èísel


; Global variables
#def  MI_CIB1 1
#def  __Init____MI_CIB1 MI_CIB1
#def  MI_CIB2 2
#def  __Init____MI_CIB2 MI_CIB2
#def  MI0_CIB1 3
#def  __Init____MI0_CIB1 MI0_CIB1
#def  MI0_CIB2 4
#def  __Init____MI0_CIB2 MI0_CIB2
#def  MI2_CIB1 5
#def  __Init____MI2_CIB1 MI2_CIB1
#def  MI2_CIB2 6
#def  __Init____MI2_CIB2 MI2_CIB2
#def  MI4_CIB1 7
#def  __Init____MI4_CIB1 MI4_CIB1
#def  MI4_CIB2 8
#def  __Init____MI4_CIB2 MI4_CIB2
#def  MI6_CIB1 9
#def  __Init____MI6_CIB1 MI6_CIB1
#def  MI6_CIB2 10
#def  __Init____MI6_CIB2 MI6_CIB2
#def  MI_RF 100
#def  __Init____MI_RF MI_RF
#def  RF0_RF 101
#def  __Init____RF0_RF RF0_RF
#def  RF2_RF 102
#def  __Init____RF2_RF RF2_RF
#def  RF4_RF 103
#def  __Init____RF4_RF RF4_RF
#def  RF6_RF 104
#def  __Init____RF6_RF RF6_RF

; Global types
#struct  TCIBunitState
  bool INI,  ;CIB jednotka je inicializovaná
  bool COM,  ;komunikace s CIB jednotkou je bez závad
  bool ADDR,  ;adresa CIB jednotky byla akceptovaná
  bool DUMMY3,
  bool REI,  ;pøíznak reinicializace CIB jednotky
  bool DUMMY5,
  bool ALT,  ;zmìna tohoto bitu signalizuje nová data (pouze pro Foxtrot 2)
  bool NET  ;CIB jednotka je definovaná v programu a obsluhovaná centrální jednotkou

; Global types
#struct  TCIBunitInfo
  bool line_defined,  ;CIB linka je definovaná v HW konfiguraci PLC
  bool unit_defined,  ;CIB jednotka je definovaná v HW konfiguraci PLC
  TCIBunitState state,  ;stav CIB jednotky (viz Typ TCIBunitState)
  word address,  ;aktuálnì nastavená HW adresa CIB jednotky
  word code,  ;kód CIB jednotky
  string[18] unit_type,  ;typové oznaèení CIB jednotky
  string[32] description  ;popis CIB jednotky

; Global types
#struct  TRFunitState
  bool INI,  ;RF jednotka je inicializovaná
  bool COM,  ;komunikace s RF jednotkou je bez závad
  bool DUMMY2,
  bool DUMMY3,
  bool DUMMY4,
  bool SLP,  ;RF jednotka muze prechazet do sleep rezimu
  bool BND,  ;jednotka je spárovaná
  bool NET  ;RF jednotka je definovaná v programu a obsluhovaná centrální jednotkou

; Global types
#struct  TRFunitInfo
  bool line_defined,  ;RF linka je definovaná v HW konfiguraci PLC
  bool unit_defined,  ;RF jednotka je definovaná v HW konfiguraci PLC
  TRFunitState state,  ;stav RF jednotky (viz Typ TRFunitState)
  word address,  ;aktuálnì nastavená HW adresa RF jednotky
  word code,  ;kód RF jednotky
  string[18] unit_type,  ;typové oznaèení RF jednotky
  string[32] description  ;popis RF jednotky

#defpou __LATENT_INSTANCE CIBunitInfo
  bool __fc__CIBunitInfo,
  usint CIB_line,  ;èíslo CIB linky (viz konstanty MI_CIB1 až MI6_CIB2)
  usint CIB_unitID,  ;èíslo pozice CIB jednotky (1,...,32)
  pointer unitInfo  ;promìnná, do které jsou uloženy získané informace o CIB jednotce


#defpou __LATENT_INSTANCE CIBunitInfo2
  bool __fc__CIBunitInfo2,
  udint Bus_ID,  ;identifikátor sbìrnice
  usint CIB_unitID,  ;logická adresa CIB jednotky (0,...,31)
  pointer unitInfo  ;promìnná, do které jsou uloženy získané informace o CIB jednotce


#defpou __LATENT_INSTANCE RFunitInfo
  bool __fc__RFunitInfo,
  usint RF_line,  ;èíslo RF linky (viz konstanty MI_RF, RF0_RF,...,RF6_RF)
  usint RF_unitID,  ;èíslo pozice RF jednotky (1,...,64)
  pointer unitInfo  ;promìnná, do které jsou uloženy získané informace o RF jednotce


#defpou __LATENT_INSTANCE SetAddressCIBunit
  bool __fc__SetAddressCIBunit,
  usint CIB_line,  ;èíslo CIB linky (viz konstanty MI_CIB1 až MI6_CIB2)
  usint CIB_unitID,  ;èíslo pozice CIB jednotky (1,...,32)
  word CIB_addr  ;nová HW adresa CIB jednotky


#defpou __LATENT_INSTANCE SetAddressCIBunit2
  bool __fc__SetAddressCIBunit2,
  udint Bus_ID,  ;identifikátor sbìrnice
  usint CIB_unitID,  ;logická adresa CIB jednotky (0,...,31)
  word CIB_addr  ;nová HW adresa CIB jednotky


#defpou __LATENT_INSTANCE SetAddressRFunit
  bool __fc__SetAddressRFunit,
  usint RF_line,  ;èíslo RF linky (viz konstanty MI_RF, RF0_RF,...,RF6_RF)
  usint RF_unitID,  ;èíslo pozice RF jednotky (1,...,64)
  word RF_addr  ;nová HW adresa RF jednotky


; Global types
#struct  TBondStat
  bool disconnect,  ;probiha odbondovani
  bool connect,  ;probiha bondovani
  bool bondMap,  ;probiha cteni bondovaci mapy
  bool dummy3,
  bool dummy4,
  bool error,  ;doslo k chybe
  bool done,  ;hotovo
  bool busy  ;master zaneprazdnen

; Global types
#struct  TBondInfo
  TBondStat bondStat,
  usint bondID,  ;cislo pozice pribondovane jednotky (je-li bondovani uspesne)
  word bondType  ;typ pribondovane jednotky (je-li bondovani uspesne)

#defpou fbBondRFunit
  bool exec,  ;žádost o spárování = nábìžná hrana zahájí akci
  usint RF_line,  ;èíslo RF linky (viz konstanty MI_RF, RF0_RF,...,RF6_RF)
  usint RF_unitID,  ;èíslo pozice RF jednotky (1,...,64)
  bool bondRq,  ;0 = pouze zrušit párování, 1 = napárovat novou jednotku
  bool useRouter,  ;1 = po napárování komunikovat s RF jednotkou pøes router
  bool done,  ;párování úspìšnì ukonèeno
  bool busy,  ;probíhá párování
  bool err,  ;párování ukonèeno s chybou
  udint errID,  ;kód chyby
  string[41] unitType,  ;typ úspìšnì spárované jednotky
  TBondInfo result,
  bool timIN,
  time timPT,
  TON tim,  ;odbondovat 2+2 s, pribondovat 12+2 s
  bool __EDGE_R__exec


#defpou __LATENT_INSTANCE ProgramLock
  bool __fc__ProgramLock


#defpou TPR
  bool IN,  ;vstup èasovaèe
  bool R,  ;reset èasovaèe
  time PT,  ;pøedvolba èasovaèe
  bool Q,  ;výstup èasovaèe
  time ET,  ;aktuální hodnota èasovaèe
  R_TRIG IN_r_edge,
  time LT  ;last tick value ( 1ms resolution)


#defpou fbTPR
  bool IN,  ;vstup èasovaèe
  bool R,  ;reset èasovaèe
  time PT,  ;pøedvolba èasovaèe
  bool Q,  ;výstup èasovaèe
  time ET,  ;aktuální hodnota èasovaèe
  R_TRIG IN_r_edge,
  time LT  ;last tick value ( 1ms resolution)


#defpou fbSaveRemToFile
  bool exec,  ;uložit stav RETAIN promìnných do souboru
  string[81] fileName,  ;jméno souboru
  bool done,  ;hotovo
  bool busy,  ;blok ještì pracuje
  bool err,  ;došlo k chybì
  int errId,  ;kód chyby
  string[81] errTxt,  ;popis chyby
  real percent,  ;kolik procent je zpracováno
  bool __EDGE_R__exec


#defpou fbLoadRemFromFile
  bool exec,  ;naèíst stav RETAIN promìnných ze souboru
  string[81] fileName,  ;jméno souboru
  bool done,  ;hotovo
  bool busy,  ;blok ještì pracuje
  bool err,  ;došlo k chybì
  int errId,  ;kód chyby
  string[81] errTxt,  ;popis chyby
  real percent,  ;kolik procent je zpracováno
  bool __EDGE_R__exec


#defpou fbSysLib_FifoDt10
  date_and_time in,  ;DATE_AND_TIME
  bool rd,  ;read
  bool wr,  ;write
  bool tst,  ;test (first out)
  bool rst,  ;reset
  date_and_time out,
  bool empty,
  bool full,
  date_and_time[10] fifo,
  int pr,
  int pw


#defpou fbFlashRem2
  bool rqFlash,  ;požadavek na uložení RETAIN promìnných
  bool done,  ;hotovo, požadavek pøijat
  bool busy,  ;pøíliš velká èetnost požadavkù (maximum je 10/hod)
  bool err,  ;chyba (v programu nejsou žádné RETAIN promìnné)
  fbSysLib_FifoDt10 FifoDt10,
  date_and_time tmpDT,
  bool stop


#defpou fbStopwatch100us
  bool start,  ;1= zahájit mìøení, 0= vrátit èas od zaèátku mìøení
  udint tim_100us,  ;èas ve stovkách mikrosekund
  real tim_ms,  ;èas v milisekundách
  udint startTim,
  udint actTim


#defpou fbSetAvahiParam2
  bool rqSet,  ;žádost o nastavení nových parametrù pro službu Avahi
  bool avahiEnable,  ;povolit nebo zakázat službu Avahi
  pointer hostName,  ;nové Avahi hostname
  bool done,  ;nové jméno nastaveno
  bool busy,  ;blok pracuje
  bool err,  ;došlo k chybì
  string[81] errTxt,  ;popis chyby
  TON delay,
  TON tim,
  bool tmpEnable,
  bool __EDGE_R__rqSet


#defpou __LATENT_INSTANCE GetAvahiHostName2
  string[81] __fc__GetAvahiHostName2


#defpou __LATENT_INSTANCE SetWebPSW
  bool __fc__SetWebPSW,
  usint user,  ;cislo radku v tabulce uzivatelu (0...9)
  pointer name,  ;nové pøihlašovací jméno
  pointer password  ;nové heslo


#defpou __LATENT_INSTANCE VerifyWebPSW
  bool __fc__VerifyWebPSW,
  usint user,  ;èíslo øádku v tabulce uživatelù (0...9)
  pointer name,  ;pøihlašovací jméno
  pointer password  ;heslo


#defpou __LATENT_INSTANCE SetWebMAC
  bool __fc__SetWebMAC,
  usint user,  ;èíslo øádku v tabulce uživatelù (0...9)
  pointer MAC  ;nová MAC adresa ('00:11:22:33:44:55')


#defpou __LATENT_INSTANCE VerifyWebMAC
  bool __fc__VerifyWebMAC,
  usint user,  ;èíslo øádku v tabulce uživatelù (0...9)
  pointer MAC  ;MAC adresa ('00:11:22:33:44:55')


#defpou __LATENT_INSTANCE SetWebLevel
  bool __fc__SetWebLevel,
  usint user,  ;èíslo øádku v tabulce uživatelù (0...9)
  sint level  ;nová úroveò (-1,0,...,9)


#defpou __LATENT_INSTANCE VerifyWebLevel
  bool __fc__VerifyWebLevel,
  usint user,  ;èíslo øádku v tabulce uživatelù (0...9)
  sint level  ;ovìøovaná úroveò (-1,0,...,9)


#defpou fbSetConfigWebPsw2
  bool rqSet,  ;žádost o nastavení nového jména a hesla
  bool clrAndSet,  ;smazat stará jména a hesla a založit jedno nové nebo pouze pøidat další
  pointer name,  ;nové pøihlašovací jméno
  pointer password,  ;nové heslo
  bool done,  ;jméno a heslo nastaveno
  bool busy,  ;blok pracuje
  bool err,  ;došlo k chybì
  string[81] errTxt,  ;popis chyby
  TON tim,
  bool __EDGE_R__rqSet


#defpou __LATENT_INSTANCE SystemDisplayBacklightOn
  bool __fc__SystemDisplayBacklightOn,
  udint tmp


#defpou __LATENT_INSTANCE SystemDisplayBacklightOff
  bool __fc__SystemDisplayBacklightOff,
  udint tmp


#defpou fbTick
  bool IN,  ;povolení èasovaèe
  time PT,  ;perioda výstupních pulzù
  bool Q,  ;výstup èasovaèe
  time ET,  ;prùbìžný èas v rámci periody
  bool WasRun,
  time RunTime

 
#srcfile 'C:\MOSAICAPP\MC4GOTTSTEIN\PROHAD\Sysgen\PROHAD.mlh'


 

#srcfile ''
